@using Microsoft.Extensions.Localization;
@using System.Collections.ObjectModel
@using Necnat.Abp.NnLibCommon.Blazor.Extensions
@using Necnat.Abp.NnLibCommon.Domains
@using Necnat.Abp.NnLibCommon.Localization
@using Volo.Abp.AspNetCore.Components
@using Volo.Abp.Identity
@inherits AbpComponentBase

<Fields>
    <Validation Validator="@ValidateDisplayName">
        <Field ColumnSize="ColumnSize.Is10">
            <FieldLabel>@L[NecnatEndpointConsts.DisplayNameDisplay]</FieldLabel>
            <TextEdit @bind-Text="@Entity!.DisplayName">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>
    <Validation Validator="@ValidateIsActive">
        <Field ColumnSize="ColumnSize.Is2">
            <FieldLabel>@L[NecnatEndpointConsts.IsActiveDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsActive">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
</Fields>
<Fields>
    <Validation Validator="@ValidateEndpoint">
        <Field ColumnSize="ColumnSize.Is12">
            <FieldLabel>@L[NecnatEndpointConsts.EndpointDisplay]</FieldLabel>
            <TextEdit @bind-Text="@Entity!.Endpoint">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>
</Fields>
<Fields>
    <Validation Validator="@ValidateIsAuthServer">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[NecnatEndpointConsts.IsAuthServerDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsAuthServer">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
    <Validation Validator="@ValidateIsBilling">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[NecnatEndpointConsts.IsBillingDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsBilling">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
</Fields>
<Fields>
    <Validation Validator="@ValidateIsAuthorization">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[NecnatEndpointConsts.IsAuthorizationDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsAuthorization">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
    <Validation Validator="@ValidatePermissionsGroupName">
        <Field ColumnSize="ColumnSize.Is8">
            <FieldLabel>@L[NecnatEndpointConsts.PermissionsGroupNameDisplay]</FieldLabel>
            <TextEdit @bind-Text="@Entity!.PermissionsGroupName" Disabled="@(Entity?.IsAuthorization != true)">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>
</Fields>
<Fields>
    <Validation Validator="@ValidateIsHierarchyComponent">
        <Field ColumnSize="ColumnSize.Is4">
            <FieldLabel>@L[NecnatEndpointConsts.IsHierarchyComponentDisplay]</FieldLabel>
            <Check TValue="bool?" @bind-Checked="@Entity!.IsHierarchyComponent">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </Check>
        </Field>
    </Validation>
    <Validation Validator="@ValidateHierarchyComponentTypeId">
        <Field ColumnSize="ColumnSize.Is8">
            <FieldLabel>@L[NecnatEndpointConsts.HierarchyComponentTypeIdDisplay]</FieldLabel>
            <NumericEdit TValue="short?" @bind-Text="@Entity!.HierarchyComponentTypeId" Disabled="@(Entity?.IsHierarchyComponent != true)">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </NumericEdit>
        </Field>
    </Validation>
</Fields>

@namespace Necnat.Abp.NnLibCommon.Blazor.Components
@code {

    [Parameter]
    public NecnatEndpointDto? Entity { get; set; }

    [Parameter]
    public EventCallback<NecnatEndpointDto?> EntityChanged { get; set; }

    public NecnatEndpointWrapper()
    {
        LocalizationResource = typeof(NnLibCommonResource);
    }

    void ValidateDisplayName(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateDisplayName((string?)e.Value, L));
    }

    void ValidateEndpoint(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateEndpoint((string?)e.Value, L));
    }

    void ValidateIsActive(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateIsActive((bool?)e.Value, L));
    }

    void ValidateIsAuthServer(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateIsAuthServer((bool?)e.Value, L));
    }

    void ValidateIsBilling(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateIsBilling((bool?)e.Value, L));
    }

    void ValidateIsAuthorization(ValidatorEventArgs e)
    {
        if ((bool?)e.Value != true)
            Entity!.PermissionsGroupName = null;

        e.WithError(NecnatEndpointValidator.ValidateIsAuthorization((bool?)e.Value, L));
    }

    void ValidatePermissionsGroupName(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidatePermissionsGroupName((string?)e.Value, Entity?.IsAuthorization, L));
    }

    void ValidateIsHierarchyComponent(ValidatorEventArgs e)
    {
        if ((bool?)e.Value != true)
            Entity!.HierarchyComponentTypeId = null;

        e.WithError(NecnatEndpointValidator.ValidateIsHierarchyComponent((bool?)e.Value, L));
    }

    void ValidateHierarchyComponentTypeId(ValidatorEventArgs e)
    {
        e.WithError(NecnatEndpointValidator.ValidateHierarchyComponentTypeId((short?)e.Value, Entity?.IsHierarchyComponent, L));
    }

}